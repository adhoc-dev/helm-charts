{{- if .Values.ingress.reverseProxy.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "adhoc-odoo.fullname" . }}-nginx-config
  labels:
    {{- include "adhoc-odoo.labels" . | nindent 4 }}
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }
    http {
      default_type  application/octet-stream;

      set_real_ip_from 10.0.0.0/8; # Internal cluster IPs
      real_ip_header X-Forwarded-For;
      real_ip_recursive on;

      sendfile on;
      server_tokens off;

      # log_format json_combined escape=json '{'
      #   '"time_local":"$time_local",'
      #   '"remote_addr":"$http_x_forwarded_for",'
      #   '"request":"$request",'
      #   '"status": "$status",'
      #   '"body_bytes_sent":"$body_bytes_sent",'
      #   '"request_time":"$request_time",'
      #   '"http_referer":"$http_referer",'
      #   '"http_user_agent":"$http_user_agent",'
      #   '"upstream_addr":"$upstream_addr",'
      #   '"upstream_status":"$upstream_status",'
      #   '"upstream_response_time":"$upstream_response_time"'
      # '}';
      # access_log /dev/stdout json_combined;
      access_log off;
      # access_log /dev/stdout;
      # error_log /dev/stderr error json;  # o info, warn, debug.

      keepalive_timeout  65;
      tcp_nodelay        on;

      # Proxy optimizations
      proxy_buffers           32 8k;
      proxy_buffer_size       4k;
      proxy_busy_buffers_size 8k;
      proxy_max_temp_file_size  2048m;
      proxy_temp_file_write_size  64k;

      # Proxy cache
      proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=cache:20m max_size=5g inactive=240m;

      # Default value '4 8k' is raising a '414 Request-URI Too Large' error
      # when '/web/webclient/translations/' is requested with a lot of module names
      # as GET parameters (performed on user login), rendering a blank page.
      # Source: https://github.com/camptocamp/docker-odoo-nginx/blob/891ad970/9.0/templates/nginx.conf.tmpl#L46-L50
      large_client_header_buffers 4 12k;

      types_hash_max_size 1024;
      types_hash_bucket_size 512;

      server_names_hash_bucket_size 64;
      server_names_hash_max_size 512;

      # Gzip
      gzip                on;
      gzip_http_version   1.0;
      gzip_proxied        any;
      gzip_min_length     500;
      gzip_disable        "MSIE [1-6]\.";
      gzip_types          text/plain text/xml text/css
                          text/comma-separated-values
                          text/javascript
                          application/json
                          application/xml
                          application/x-javascript
                          application/javascript
                          application/atom+xml;


      # Add Headers for odoo proxy mode
      proxy_set_header X-Forwarded-For $http_x_forwarded_for;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
      proxy_set_header Forwarded "for=$http_x_forwarded_for;proto=$scheme";
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Host $http_host;
      # proxy_set_header X-Forwarded-Proto $scheme; # Commented to avoid issues with some Odoo modules that do not handle well HTTP root_url
      # proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_redirect off;

      upstream odoo {
        server {{ include "adhoc-odoo.serviceNameSuffix" . }}-http:80;
        keepalive 32;  # Mejora rendimiento para conexiones persistentes
      }

      {{- $usewebsocket  := .Values.odoo.performance.workers | toString | int -}}
      {{- if gt $usewebsocket 0 }}
      upstream odoochat {
        server {{ include "adhoc-odoo.serviceNameSuffix" . }}-websocket:80;
        keepalive 32;  # Mejora rendimiento para conexiones persistentes
      }
      {{- end }}

      # Used by websocket
      # https://www.odoo.com/documentation/18.0/administration/on_premise/deploy.html?highlight=nginx#https
      map $http_upgrade $connection_upgrade {
          default upgrade;
          ''      close;
      }

      # Used by static files
      # https://www.odoo.com/documentation/18.0/administration/on_premise/deploy.html?highlight=nginx#serving-static-files
      map $sent_http_content_type $content_type_csp {
          default "";
          ~image/ "default-src 'none'";
      }

      map $upstream_http_cache_control $cache_bypass {
          ~*private    1;    # Don't cache if private
          default      0;    # Cache in other cases (includes no-cache)
      }

      {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
      # Rate Limiting for basic brute force protection
      # Create a 10MB zone, enough for ~160,000 IPs.
      limit_req_zone $binary_remote_addr zone=static:10m rate={{ .Values.ingress.reverseProxy.rateLimit.static | default "3000r/s" }};
      limit_req_zone $binary_remote_addr zone=access:10m rate={{ .Values.ingress.reverseProxy.rateLimit.access | default "5r/m" }};
      limit_req_zone $binary_remote_addr zone=generic:10m rate={{ .Values.ingress.reverseProxy.rateLimit.generic | default "60r/s" }};
      {{- if gt $usewebsocket 0 }}
      limit_req_zone $binary_remote_addr zone=longpoll:10m rate={{ .Values.ingress.reverseProxy.rateLimit.ws | default "10r/s" }};
      {{- end }}
      {{- end }}

      server {
        listen 80 default;
        client_max_body_size 1G;

        # Prevent browsers from ever sending a plain HTTP request to this domain
        # https://www.odoo.com/documentation/18.0/administration/on_premise/deploy.html?highlight=nginx#https-hardening
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

        # Additional configuration for the session_id cookie.
        # The Secure flag ensures it is never transmitted over HTTP
        # SameSite=Lax to prevent authenticated CSRF.
        # https://www.odoo.com/documentation/18.0/administration/on_premise/deploy.html?highlight=nginx#https-hardening
        proxy_cookie_flags session_id samesite=lax secure;

        # Security
        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        # Cookies are set to Secure and HttpOnly
        # proxy_cookie_path / "/; Secure; HttpOnly; SameSite=Lax";
        # proxy_cookie_flags ~*^(?!cids$).* Secure HttpOnly SameSite=Lax;
        # Additional protection against clickjacking
        add_header Content-Security-Policy "frame-ancestors 'self'";

        # Preventing scans
        # Block access to sensitive files
        location ~* (^/\.env|^/\.git|\.htaccess|\.DS_Store|/config\.json|/config\.php|/vendor/|/composer\.(json|lock)|/README\.md)$ {
            return 403;
        }
        # Block access to hidden files (dotfiles)
        location ~ /\. {
            return 403;
        }
        # Block malicious bot agents
        if ($http_user_agent ~* (acunetix|sqlmap|nikto|wpscan|fimap|nmap|masscan|Xenu|WinHttp)) {
            return 403;
        }
        # Invalid extensions
        location ~* \.(php|jsp|asp|aspx|cgi)$ {
            return 403;
        }
        # Block wordpress related requests
        location ~* (^/wp-|^/wordpress|^/xmlrpc\.php$) {
            return 403;
        }
        # # These tools are often used in automated attacks or scans
        # if ($http_user_agent ~* (curl|wget|libwww-perl)) {
        #     return 403;
        # }

        ### Limit Requests

        # Custom response for rate-limited requests
        location @rate_limited {
            add_header X-RateLimit-Blocked "true";
            add_header Retry-After 60;
            return 503;
        }

        # Specific limits for login and authenticate requests
        # These are the most common targets for brute-force attacks
        # We allow a burst of 3 requests, with no delay for excessive requests
        # This means that a client can make 3 requests in quick succession
        # but will be limited to the defined rate thereafter.

        location ~ "^(/[a-z]{2}(_[A-Z]{2})?)?/web/login$" {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            # Rate limiting for login attempts
            limit_req zone=access burst=3 nodelay;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_pass http://odoo;
        }

        location ~ "^(/[a-z]{2}(_[A-Z]{2})?)?/web/session/authenticate$" {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            # Rate limiting for authenticate attempts
            limit_req zone=access burst=3 nodelay;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_pass http://odoo;
        }

        location ~ "^(/[a-z]{2}(_[A-Z]{2})?)?/web/reset_password$" {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            limit_req zone=access burst=3 nodelay;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_pass http://odoo;
        }

        location ~ "^(/[a-z]{2}(_[A-Z]{2})?)?/web/signup$" {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            limit_req zone=access burst=3 nodelay;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_pass http://odoo;
        }

        location ~ "^(/[a-z]{2}(_[A-Z]{2})?)?/web/session/logout$" {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            limit_req zone=access burst=3 nodelay;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_pass http://odoo;
        }

        location ~ ^/saas_auth {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            limit_req zone=access burst=3 nodelay;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_pass http://odoo;
        }

        location ~ "^/web/dataset/(call_kw|call_button|call_kw_multi)$" {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            limit_req zone=access burst=3 nodelay;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_pass http://odoo;
        }

        # Database management endpoints
        location ~ "^/web/database/(create|drop|duplicate|backup|restore|change_password)$" {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            limit_req zone=access burst=3 nodelay;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_pass http://odoo;
        }

        # Other sensitive endpoints that could be targeted
        location ~ "^(/[a-z]{2}(_[A-Z]{2})?)?/web/login/qr$" {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            limit_req zone=access burst=3 nodelay;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_pass http://odoo;
        }

        # SMS sending endpoint
        location ~ "^(/[a-z]{2}(_[A-Z]{2})?)?/web/session/send_sms$" {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            limit_req zone=access burst=3 nodelay;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_pass http://odoo;
        }

        # RPC XML endpoint

        location ~ "^/xmlrpc" {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            limit_req zone=access burst=3 nodelay;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_pass http://odoo;
        }

        # RPC JSON endpoint +19
        location ~ "^/json" {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            limit_req zone=access burst=3 nodelay;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_pass http://odoo;
        }

        # RPC JSON endpoint
        location ~ "^/jsonrpc" {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            limit_req zone=access burst=3 nodelay;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_pass http://odoo;
        }

        # Specific limit for the Odoo root URL
        # This is often targeted for various types of attacks
        # We allow a burst of 3 requests, with no delay for excessive requests
        # This means that a client can make 3 requests in quick succession
        # but will be limited to the defined rate thereafter.

        location ~ "^/odoo" {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            # Rate limiting for ERP requests
            limit_req zone=generic burst=3 nodelay;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_pass http://odoo;
        }

        # limit_req_zone $binary_remote_addr zone=odoo:10m rate=10r/s;
        # Redirect requests to odoo backend server
        location / {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            limit_req zone=generic burst=20 nodelay;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_pass http://odoo;
        }

        # Specific limit for Websocket and longpolling support (Odoo chat)

        {{- if gt $usewebsocket 0 }}
        # Redirect longpoll requests to odoo longpolling port (Odoo <= 15.0)
        location /longpolling {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            limit_req zone=longpoll burst=20;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_pass http://odoochat;
            # Avoid premature disconections
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }

        # Redirect websocket requests to odoo gevent port (Odoo >= 16.0)
        location /websocket {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            limit_req zone=longpoll burst=20;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_pass http://odoochat;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            # Avoid premature disconections
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }
        {{- end }}

        # Specific limit for static content: images, css, js, ...
        # These are safe to cache aggressively, and caching them reduces load on Odoo
        # and speeds up response times for users.
        # We allow a burst of 100 requests, with no delay for excessive requests
        # This means that a client can make 100 requests in quick succession
        # but will be limited to the defined rate thereafter.

        {{- if .Values.ingress.reverseProxy.imageCacheEnabled }}
        # Specific caching for product images (more aggressive)
        # Product images are the most commonly accessed images in Odoo

        location ~ "^/(web|website)/image/" {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            limit_req zone=static burst=100 nodelay;
            error_page 503 = @rate_limited;
            {{- end }}

            # Cache if it is a public product and does not have access_token
            set $no_cache 0;
            if ($uri ~ "^/(web|website)/image/(product\.template|product\.product|website\..+)/") {
                set $no_cache 0;
            }
            if ($cache_bypass) {
                set $no_cache 1;
            }

            # The image is the same for all users, so need to ignore the backend headers
            proxy_ignore_headers Set-Cookie Vary Cache-Control Expires;

            proxy_no_cache $no_cache;
            proxy_cache_bypass $no_cache;

            # Don't send cookies to the backend (on public cached images)
            proxy_set_header Cookie "";
            # Don't send cookies to the client on public cached images
            proxy_hide_header Set-Cookie;

            # Override del Cache-Control
            proxy_hide_header Cache-Control;

            # Ignore any Set-Cookie headers in cache key
            proxy_cache_key "$scheme$proxy_host$uri$is_args$args";
            add_header X-Internal-Cache-Status $upstream_cache_status;

            proxy_pass http://odoo;
            {{ include "adhoc-odoo.nginx.cache_headers" . }}
        }

        {{- end }}

        # Static files are still served by Odoo, because Nginx doesn't have access to
        # the Odoo source code. However, they are cached.
        location ~ "^/[^/]+/static/.+$" {
            {{- if .Values.ingress.reverseProxy.rateLimit.enabled }}
            limit_req zone=static burst=100 nodelay;
            error_page 503 = @rate_limited;
            {{- end }}
            proxy_ignore_headers Set-Cookie;
            proxy_pass http://odoo;
            {{ include "adhoc-odoo.nginx.cache_headers" . }}
        }

        # Filestore storage files are served by Nginx thanks to the X-Accel extension
        # Requires the `x_sendfile = True` configuration in Odoo.
        # https://www.odoo.com/documentation/18.0/administration/on_premise/deploy.html?highlight=nginx#serving-attachments
        location /web/filestore {
            internal;
            alias /mnt/filestore;
            add_header X-Served-By "nginx-filestore"; # debugging
        }
      }
    }

{{- end }}
