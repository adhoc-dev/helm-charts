apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "adhoc-pg.fullname" . }}
  labels:
    {{- include "adhoc-pg.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "adhoc-pg.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "adhoc-pg.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "adhoc-pg.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - "postgres"
          - -p 5432
          - -c max_connections={{- .Values.pg.args.maxConn }}
          ports:
            - name: pg
              containerPort: 5432
              protocol: TCP
          # This is a shm workarrund https://stackoverflow.com/questions/46085748/define-size-for-dev-shm-on-container-engine/46434614#46434614
          volumeMounts:
          # - mountPath: /var/lib/postgresql/data
          #   name: postgredb
          - mountPath: /dev/shm
            name: dshm
          # readinessProbe:
          #   tcpSocket:
          #     port: 5432
          #   initialDelaySeconds: 60
          #   periodSeconds: 60
          # livenessProbe:
          #   tcpSocket:
          #     port: 5432
          #   initialDelaySeconds: 60
          #   periodSeconds: 30

          env:
          # SqlSrv
          - name: "POSTGRES_DB"
            value: {{ .Values.pg.db | quote }}
          - name: "POSTGRES_USER"
            value: {{ .Values.pg.user | quote }}
          - name: "POSTGRES_PASSWORD"
            value: {{ .Values.pg.pass | quote }}
          # SqlCli
          - name: "PGDATABASE"
            value: {{ .Values.pg.db | quote }}
          - name: "PGUSER"
            value: {{ .Values.pg.user | quote }}
          - name: "PGPASSWORD"
            value: {{ .Values.pg.pass | quote  }}
          - name: "PGPORT"
            value: {{ .Values.service.port | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      # - name: postgredb
      #   persistentVolumeClaim:
      #     claimName: {{ include "adhoc-pg.fullname" . }}-pvc
      # This is a shm workarrund
      - name: dshm
        emptyDir:
          medium: Memory
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
