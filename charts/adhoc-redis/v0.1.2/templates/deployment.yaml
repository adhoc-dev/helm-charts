apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "adhoc-redis.fullname" . }}
  labels:
    {{- include "adhoc-redis.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "adhoc-redis.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "adhoc-redis.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "adhoc-redis.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["redis-server"]
          {{- if .Values.redis.arguments }}
          args:
          {{- range $key, $value := .Values.redis.arguments }}
          - "--{{ $key }}"
          {{- if $value }}
          - "{{ $value }}"
          {{- end }}
          {{- end }}
          {{- end }}
          ports:
            - name: redis
              containerPort: {{ .Values.redis.port }}
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: {{ .Values.redis.port }}
            initialDelaySeconds: 60
            periodSeconds: 60
          livenessProbe:
            tcpSocket:
              port: {{ .Values.redis.port }}
            initialDelaySeconds: 60
            periodSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.nodeTag }}
                operator: In
                values:
                - "true"
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
