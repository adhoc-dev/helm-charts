{{- if .Values.ingress.reverseProxy.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "adhoc-odoo.fullname" . }}-nginx-config
  labels:
    {{- include "adhoc-odoo.labels" . | nindent 4 }}
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }
    http {
      default_type  application/octet-stream;

      sendfile on;
      proxy_redirect off;
      server_tokens off;

      access_log off;
      # access_log /dev/stdout;
      # error_log /dev/stderr;

      keepalive_timeout  65;
      tcp_nodelay        on;

      # Proxy optimizations
      proxy_buffers           32 8k;
      proxy_buffer_size       4k;
      proxy_busy_buffers_size 8k;
      proxy_max_temp_file_size  2048m;
      proxy_temp_file_write_size  64k;

      # Proxy cache
      proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=cache:10m max_size=10g inactive=60m;

      # Default value '4 8k' is raising a '414 Request-URI Too Large' error
      # when '/web/webclient/translations/' is requested with a lot of module names
      # as GET parameters (performed on user login), rendering a blank page.
      # Source: https://github.com/camptocamp/docker-odoo-nginx/blob/891ad970/9.0/templates/nginx.conf.tmpl#L46-L50
      large_client_header_buffers 4 12k;

      types_hash_max_size 1024;
      types_hash_bucket_size 512;

      server_names_hash_bucket_size 64;
      server_names_hash_max_size 512;

      # Gzip
      gzip                on;
      gzip_http_version   1.0;
      gzip_proxied        any;
      gzip_min_length     500;
      gzip_disable        "MSIE [1-6]\.";
      gzip_types          text/plain text/xml text/css
                          text/comma-separated-values
                          text/javascript
                          application/json
                          application/xml
                          application/x-javascript
                          application/javascript
                          application/atom+xml;

      upstream odoo {
        server {{ include "adhoc-odoo.serviceNameSuffix" . }}-http:80;
        keepalive 32;  # Mejora rendimiento para conexiones persistentes
      }

      {{- $usewebsocket  := .Values.odoo.performance.workers | toString | int -}}
      {{- if gt $usewebsocket 0 }}
      upstream odoochat {
        server {{ include "adhoc-odoo.serviceNameSuffix" . }}-websocket:80;
        keepalive 32;  # Mejora rendimiento para conexiones persistentes
      }
      {{- end }}

      # Used by websocket
      # https://www.odoo.com/documentation/18.0/administration/on_premise/deploy.html?highlight=nginx#https
      map $http_upgrade $connection_upgrade {
          default upgrade;
          ''      close;
      }

      # Used by static files
      # https://www.odoo.com/documentation/18.0/administration/on_premise/deploy.html?highlight=nginx#serving-static-files
      map $sent_http_content_type $content_type_csp {
          default "";
          ~image/ "default-src 'none'";
      }

      server {
        listen 80 default;
        client_max_body_size 1G;

        # ========================================================== #
        # VALORES DE TIMEOUT GLOBALES PARA TODO EL SERVIDOR
        # ========================================================== #
        proxy_connect_timeout   1500s;
        proxy_send_timeout      1500s;
        proxy_read_timeout      1500s;

        # Prevent browsers from ever sending a plain HTTP request to this domain
        # https://www.odoo.com/documentation/18.0/administration/on_premise/deploy.html?highlight=nginx#https-hardening
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

        # Additional configuration for the session_id cookie.
        # The Secure flag ensures it is never transmitted over HTTP
        # SameSite=Lax to prevent authenticated CSRF.
        # https://www.odoo.com/documentation/18.0/administration/on_premise/deploy.html?highlight=nginx#https-hardening
        proxy_cookie_flags session_id samesite=lax secure;

        # Security
        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        # Cookies are set to Secure and HttpOnly
        # proxy_cookie_path / "/; Secure; HttpOnly; SameSite=Lax";
        # proxy_cookie_flags ~*^(?!cids$).* Secure HttpOnly SameSite=Lax;
        # Additional protection against clickjacking
        add_header Content-Security-Policy "frame-ancestors 'self'";

        # Preventing scans
        # Block access to sensitive files
        location ~* (^/\.env|^/\.git|\.htaccess|\.DS_Store|/config\.json|/config\.php|/vendor/|/composer\.(json|lock)|/README\.md)$ {
            return 403;
        }
        # Block access to hidden files (dotfiles)
        location ~ /\. {
            return 403;
        }
        # Block malicious bot agents
        if ($http_user_agent ~* (acunetix|sqlmap|nikto|wpscan|fimap|nmap|masscan|Xenu|WinHttp)) {
            return 403;
        }
        # Invalid extensions
        location ~* \.(php|jsp|asp|aspx|cgi)$ {
            return 403;
        }
        # Block wordpress related requests
        location ~* (^/wp-|^/wordpress|^/xmlrpc\.php$) {
            return 403;
        }
        # # These tools are often used in automated attacks or scans
        # if ($http_user_agent ~* (curl|wget|libwww-perl)) {
        #     return 403;
        # }

        # limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
        # location = /web/login {
        #     # Rate limiting for login attempts
        #     limit_req zone=login burst=3 nodelay;
        #     proxy_pass http://odoo;
        # }

        # limit_req_zone $binary_remote_addr zone=authenticate:10m rate=5r/m;
        # location = /web/session/authenticate {
        #     # Rate limiting for login attempts
        #     limit_req zone=authenticate burst=3 nodelay;
        #     proxy_pass http://odoo;
        # }

        # limit_req_zone $binary_remote_addr zone=erp:10m rate=5r/s;
        # location = /odoo {
        #     # Rate limiting for login attempts
        #     limit_req zone=erp burst=3 nodelay;
        #     error_page 503 = @rate_limited;
        #     proxy_pass http://odoo;
        # }

        # Custom response for rate-limited requests
        # location @rate_limited {
        #     add_header X-RateLimit-Blocked "true";
        #     add_header Retry-After 60;
        #     return 503;
        # }

        # Rate Limiting for basic brute force protection
        # Create a 10MB zone called odoo, enough for ~160,000 IPs.
        # limit_req_zone $binary_remote_addr zone=odoo:10m rate=10r/s;
        # Redirect requests to odoo backend server
        location / {
            # limit_req zone=odoo burst=20 nodelay;

            proxy_pass http://odoo;
            # Add Headers for odoo proxy mode
            proxy_set_header X-Forwarded-For $http_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;

            proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
            proxy_set_header Forwarded "for=$http_x_forwarded_for;proto=$scheme";

            proxy_set_header Host $http_host;
            proxy_redirect off;
        }

        {{- if gt $usewebsocket 0 }}
        # limit_req_zone $binary_remote_addr zone=longpoll:10m rate=10r/s;
        # Redirect longpoll requests to odoo longpolling port (Odoo <= 15.0)
        location /longpolling {
            # limit_req zone=longpoll burst=20;
            proxy_pass http://odoochat;
            # Add Headers for odoo proxy mode
            proxy_set_header X-Forwarded-For $http_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;

            proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
            proxy_set_header Forwarded "for=$http_x_forwarded_for;proto=$scheme";

            proxy_set_header Host $http_host;
            proxy_redirect off;
            # Avoid premature disconections
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }

        # Redirect websocket requests to odoo gevent port (Odoo >= 16.0)
        location /websocket {
            # limit_req zone=longpoll burst=20;
            proxy_pass http://odoochat;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            # Add Headers for odoo proxy mode
            proxy_set_header X-Forwarded-For $http_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;

            proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
            proxy_set_header Forwarded "for=$http_x_forwarded_for;proto=$scheme";

            proxy_set_header Host $http_host;
            proxy_redirect off;
            # Avoid premature disconections
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }
        {{- end }}

        # Static files are still served by Odoo, because Nginx doesn't have access to
        # the Odoo source code. However, they are cached.
        location ~ ^/[^/]+/static/.+$ {
            proxy_buffering on;
            proxy_pass http://odoo;

            proxy_cache cache;
            proxy_cache_valid 60m;
            proxy_cache_valid any 1m;
            proxy_cache_revalidate on;
            proxy_cache_use_stale error timeout updating;
            proxy_cache_background_update on;
            proxy_cache_lock on;

            expires 365d;
            add_header Cache-Control "public, immutable";
            proxy_cache_valid 200 302 365d;
            proxy_cache_valid 404 1m;
            add_header X-Cache-Status $upstream_cache_status;  # debugging

            # Security recommendations
            # https://www.odoo.com/documentation/18.0/administration/on_premise/deploy.html?highlight=nginx#serving-static-files
            add_header Content-Security-Policy $content_type_csp;

            # Add Headers for odoo proxy mode
            proxy_set_header X-Forwarded-For $http_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;

            proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
            proxy_set_header Forwarded "for=$http_x_forwarded_for;proto=$scheme";

            proxy_set_header Host $http_host;
            proxy_redirect off;
        }

        # Filestore storage files are served by Nginx thanks to the X-Accel extension
        # Requires the `x_sendfile = True` configuration in Odoo.
        # https://www.odoo.com/documentation/18.0/administration/on_premise/deploy.html?highlight=nginx#serving-attachments
        location /web/filestore {
            internal;
            alias /mnt/filestore;
            add_header X-Served-By "nginx-filestore"; # debugging
        }
      }
    }

{{- end }}
