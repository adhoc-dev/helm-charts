# Default values for adhoc-odoo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: adhoc/odoo-adhoc
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "13.0-enterprise"
  pullSecret: "regcred"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# https://v1-18.docs.kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /web/login
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  failureThreshold: 20
  # Must be 1 for liveness and startup
  #successThreshold: 1
readinessProbe:
  httpGet:
    path: /web/login
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 2

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  # adhoc-letsencrypt-prod-issuer
  # adhoc-letsencrypt-staging-issuer
  issuer: adhoc-letsencrypt-prod-issuer
  enableHttps: true
  # AltHost
  hosts: ""
  cloudMainDomain: dev-adhoc.com

  # True for Google Ingress or false for internal NGINX Ingress
  useGoogleCloudExternalLB: false

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 1000m
    memory: 1280Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}
tolerations: {}

odoo:
  # Database parameters
  pg:
    user: ""
    pass: ""
    host: "adhoc-pg.adhoc-pg.svc.cluster.local"
    port: 5432
    db: ""
  # Base Config
  basic:
    adminPass: "admin"
    dbFilter: "false"
    wideModules: "base,web,server_mode,saas_client"
    logLevel: "info"
#    aerooHost: ""
    emailFrom: "notifications@adhoc.nubeadhoc.com"
    auxEnv:
#      example: "yes"
  # Performance Config
  saas:
    mode: false
  performance:
    workers: 0
    maxCronTh: 1
    maxDbConn: 96
    dbTemplate: "template0"
    maxMemHard: "4777721600"
    maxMemSoft: "3147484000"
    maxTimeCpu: 3000
    maxTimeReal: 1600
    maxTimeCron: 6000
    maxHttpTh: 8
    saasPath: "/home/odoo/src/repositories/ingadhoc-odoo-saas"
  entrypoint:
    fixdbs: false
    fixdbsAdhoc: true
    # Dynamic Entrypoint
    repos: ""
    custom: ""
  # SMTP Config
  smtp:
    host: ""
    port: 0
    ssl: false
    user: ""
    pass: ""
    catchall: ""
    whiteList: "adhoc.nubeadhoc.com"
# Redis Config
redis:
  enabled: false
  host: ""
  pass: ""

nodeTag: "prod"
