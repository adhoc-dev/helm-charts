questions:
# NodeTag - Affinity
  - variable: nodeTag
    group: "NodeTag"
    label: "Node tag for node affinity"
    description: "Tag to schedule pods in nodes"
    type: "string"
    required: true
    default: "Prod"
  - variable: replicaCount
    group: "NodeTag"
    label: "Replica Count"
    description: "Scale (number of replicas)"
    type: "int"
    required: true
    default: "1"

  # Docker image config
  - variable: image.repository
    group: "Docker"
    label: "Odoo Image Name"
    description: "For eg. adhoc/odoo-saas"
    type: "string"
    required: true
    default: "adhoc/odoo-adhoc"
  - variable: image.tag
    group: "Docker"
    label: "Odoo Image Tag"
    type: "string"
    required: true
    default: "13.0-enterprise"
  - variable: image.pullSecret
    group: "Docker"
    label: "pullSecret"
    type: "string"
    required: false
    default: "adhocsa"

# Database Configuration
  - variable: odoo.pg.db
    group: "Database"
    label: "Odoo DB Name"
    description: "The Odoo PostgreSQL database to be created on deploy. If none is set, then no database is created"
    type: "string"
    required: true
    default: "odoo"
  - variable: odoo.pg.user
    group: "Database"
    label: "Postgres User"
    description: "Postgres user"
    type: "string"
    required: true
    default: "odoo"
  - variable: odoo.pg.pass
    group: "Database"
    label: "Postgres Password"
    description: "Postgres Password"
    type: "password"
    required: true
  - variable: odoo.pg.host
    group: "Database"
    label: "Postgres Host"
    description: "Postgres Host"
    type: "string"
    required: true
    default: "adhoc-pg.adhoc-pg.svc.cluster.local"
  - variable: odoo.pg.port
    group: "Database"
    label: "Postgres Port"
    description: "Postgres Port"
    type: "int"
    required: true
    default: "5432"

# Pods limits and requests
  - variable: resources.requests.cpu
    group: "Resources"
    label: "Pods CPU Request"
    description: "Pods CPU Request"
    type: "string"
    required: true
    default: "30m"
  - variable: resources.requests.memory
    group: "Resources"
    label: "Pods Memory Request"
    description: "Pods Memory Request"
    type: "string"
    required: true
    default: "250Mi"
  - variable: resources.limits.cpu
    group: "Resources"
    label: "Pods CPU Limit"
    description: "Pods CPU Limit"
    type: "string"
    required: true
    default: "3000m"
  - variable: resources.limits.memory
    group: "Resources"
    label: "Pods Memory Limit"
    description: "Pods Memory Limit"
    type: "string"
    required: true
    default: "4096Mi"

# Odoo Basic Configuration
  - variable: odoo.basic.adminPass
    group: "Basic"
    label: "Odoo ADMIN_PASSWORD"
    description: "Odoo ADMIN_PASSWORD environment var"
    type: "password"
    required: true
    default: "admin"
  - variable: odoo.basic.wideModules
    group: "Basic"
    label: "Server-wide modules."
    type: "string"
    required: true
    default: "base,web,server_mode,saas_client"
  - variable: odoo.basic.dbFilter
    group: "Basic"
    label: "Odoo DB Filter"
    description: "Regexp for Filter listed databases. For exact name use, for eg 'odoo$' for odoo db"
    type: "string"
    required: true
    default: ".*"
  - variable: "odoo.basic.logLevel"
    group: "Basic"
    label: "Log Level"
    type: enum
    default: "info"
    options:
      - critical
      - error
      - warn
      - info
      - test
      - debug
      - debug_rpc
      - debug_sql
      - debug_rpc_answer
      - false
  # - variable: odoo.basic.listDb
  #   label: "LIST DBs"
  #   type: "boolean"
  #   required: false
  #   default: True
  - variable: odoo.basic.aerooHost
    group: "Basic"
    label: "Aeroo docs host"
    description: ""
    type: "string"
    required: false
    default: ""
  - variable: odoo.basic.emailFrom
    group: "Basic"
    label: "Email From"
    type: "string"
    required: false
    default: "notifications@adhoc.nubeadhoc.com"
# SaaS
  - variable: odoo.saas.mode
    group: "Saas"
    label: "Odoo SERVER_MODE"
    description: "Odoo SERVER_MODE environment var (leave empty for production environment)"
    type: "string"
    required: false
    default: ""
# Performance Configuration
  - variable: odoo.performance.workers
    group: "Performance"
    label: "Odoo WORKERS"
    description: "Odoo WORKERS environment var"
    type: "int"
    required: true
    default: 0
  - variable: odoo.performance.maxCronTh
    group: "Performance"
    label: "Maximum Cron Threads"
    description: "Maximum number of threads processing concurrently cron jobs"
    type: "int"
    required: true
    default: "1"
  - variable: odoo.performance.maxDbConn
    group: "Performance"
    label: "Odoo Max Connections"
    type: "int"
    required: true
    default: "100"
  - variable: odoo.performance.maxMemHard
    group: "Performance"
    label: "Limit Memory Hard"
    description: "Maximum allowed virtual memory per worker, when reached, any memory allocation will fail"
    type: "int"
    required: true
    default: "2147483648"
  - variable: odoo.performance.maxMemSoft
    group: "Performance"
    label: "Limit Memory Soft"
    description: "Maximum allowed virtual memory per worker, when reached the worker be reset after the current request"
    type: "int"
    required: true
    default: 671088640
  - variable: odoo.performance.maxTimeCpu
    group: "Performance"
    label: "Limit Time CPU"
    description: "Maximum allowed CPU time per request"
    type: "int"
    required: true
    default: 400
  - variable: odoo.performance.maxTimeReal
    group: "Performance"
    label: "Limit Time Real"
    description: "Maximum allowed Real time per request"
    type: "int"
    required: true
    default: 800
  - variable: odoo.performance.maxTimeCron
    group: "Performance"
    label: "Limit Time Real (only v11+)"
    description: "Maximum allowed Real time per cron job. (default: --limit-time-real). Set to 0 for no limit."
    type: "int"
    required: true
    default: 1600
  - variable: odoo.performance.maxHttpTh
    group: "Performance"
    label: "Odoo max http threads"
    description: "Odoo max http threads"
    type: "int"
    required: true
    default: 8
  - variable: odoo.performance.dbTemplate
    group: "Performance"
    label: "DB Template"
    type: "string"
    required: false
    default: "template0"
  - variable: odoo.performance.saasPath
    group: "Performance"
    label: "Saas Path"
    type: "string"
    required: true
    default: "/home/odoo/src/repositories/ingadhoc-odoo-saas"
# Entrypoint Odoo-SaaS
  - variable: odoo.entrypoint.fixdbs
    group: "Entrypoint"
    label: "FIX DBS (click-odoo-update)"
    description: "Try to fix database before starting odoo."
    type: "boolean"
    default: false
    required: false
  - variable: odoo.entrypoint.fixdbsAdhoc
    group: "Entrypoint"
    label: "FIX DBS AdHoc"
    description: "Try to fix database before starting odoo."
    type: "boolean"
    default: true
    required: false
  - variable: odoo.entrypoint.repos
    group: "Entrypoint"
    label: "Git Aggregator repos.yml"
    description: "Custom repositories to be aggregated on entrypoint."
    type: multiline
    default: ""
    required: false
  - variable: odoo.entrypoint.custom
    group: "Entrypoint"
    label: "Custom odoo.conf"
    description: "Custom configuration for odoo.conf"
    type: multiline
    default: ""
    required: false
# SMTP config
  - variable: odoo.smtp.host
    group: "SMTP"
    label: "SMTP Server Host"
    type: "string"
    required: false
    default: "smtp.mailgun.org"
  - variable: odoo.smtp.port
    group: "SMTP"
    label: "SMTP Port"
    type: "int"
    required: false
    default: "25"
  - variable: odoo.smtp.ssl
    group: "SMTP"
    label: "SMTP SSL"
    type: "boolean"
    required: false
    default: False
  - variable: odoo.smtp.user
    group: "SMTP"
    label: "SMTP User"
    type: "string"
    required: false
  - variable: odoo.smtp.pass
    group: "SMTP"
    label: "SMTP Password"
    type: "password"
    required: false
  - variable: odoo.smtp.whiteList
    group: "SMTP"
    label: "White list"
    type: "string"
    required: false
    default: "adhoc.ar"
  - variable: odoo.smtp.catchall
    group: "SMTP"
    label: "Mail Catchall Domain"
    description: "Domain used for catchall, usually same domain as instance domain"
    type: "string"
    required: false
    default: "example.com"

# Storage (por ahora solo permitimos s3)
  - variable: storage.aws_region
    group: "Storage"
    label: "Storage Region"
    type: "string"
    required: true
  - variable: storage.aws_host
    group: "Storage"
    label: "Storage Host"
    type: "string"
    required: true
  - variable: storage.aws_bucketname
    group: "Storage"
    label: "Storage Bucketname"
    type: "string"
    required: true
  - variable: storage.aws_access_key_id
    group: "Storage"
    label: "Storage Access Key Id"
    type: "string"
    required: true
  - variable: storage.aws_secret_access_key
    group: "Storage"
    label: "Storage Secret Access Key"
    type: "password"
    required: true

# Sessions
  - variable: redis.enabled
    group: "Redis"
    label: "Store sessions on redis?"
    type: "boolean"
    default: false
  - variable: redis.host
    group: "Redis"
    label: "Redis Host"
    description: "Required if Store Session on Redis"
    type: "string"
    required: false
    show_if: "redis.enabled=true"
  - variable: redis.pass
    group: "Redis"
    label: "Redis Password (optional)"
    type: "password"
    required: false
    default: "False"
    show_if: "redis.enabled=true"

# Ingress Configuration
  - variable: ingress.enableHttps
    group: "Ingress"
    label: "Enable TLS (HTTPs)"
    type: "boolean"
    required: true
    default: true
  - variable: ingress.cloudMainDomain
    group: "Ingress"
    label: "Adhoc Cloud Host"
    description: ""
    type: "string"
    required: false
    default: "dev-adhoc.com"
  - variable: ingress.issuer
    group: "Ingress"
    label: "HTTP let's encrypt issuer name"
    description: ""
    type: "string"
    required: true
    default: "adhoc-letsencrypt-prod-issuer"
    show_if: "ingress.enableHttps=true"
  - variable: ingress.hosts
    group: "Ingress"
    label: "hosts"
    description: "hosts (comma separed values)"
    type: "string"
    required: false
    default: ""
