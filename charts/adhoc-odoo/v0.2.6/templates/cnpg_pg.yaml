{{- if .Values.cloudNativePG.enabled }}

{{- if not .Values.cloudNativePG.restoreBackUp }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "adhoc-odoo.fullname" . }}-pg-secret
type: kubernetes.io/basic-auth
data:
  username: {{ .Values.odoo.pg.user | b64enc | quote }}
  password: {{ .Values.odoo.pg.pass | b64enc | quote }}
{{- end }}
---
{{- if eq (lower .Values.adhoc.appType) "prod" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "adhoc-odoo.fullname" . }}-backup-secret
type: Opaque
data:
  backup-key.json: {{ .Values.cloudNativePG.bucketCredential | b64enc }}
{{- end }}
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ include "adhoc-odoo.fullname" . }}-pg
  labels:
    app.kubernetes.io/name: {{ include "adhoc-odoo.fullname" . }}-pg
  annotations:
    # For manual intervention
    # cnpg.io/reconciliationLoop: "disabled"
    # 
    cnpg.io/hibernation: "off"
    # 
    # cnpg.io/skipEmptyWalArchiveCheck: "enabled"
    # cnpg.io/force-backup-recovery: "true"

spec:
  imageName: "ghcr.io/cloudnative-pg/postgresql:{{ .Values.cloudNativePG.version | default "15.0" }}"
  primaryUpdateStrategy: unsupervised
  instances: {{ .Values.cloudNativePG.instances | default 1 }}
  affinity:
    # This configuration distributes instances across different hosts, minimizing disruptions in case of node failure.
    enablePodAntiAffinity: true # Default value
    topologyKey: kubernetes.io/hostname # Default value
    podAntiAffinityType: preferred # Default value
  storage:
    size: {{ .Values.cloudNativePG.persistence.size }}
    {{- if .Values.cloudNativePG.persistence.storageClass }}
    storageClass: {{ include "adhoc-odoo.fullname" . }}-pg-sc
    {{- end }}
  resources:
    requests:
      memory: {{ .Values.cloudNativePG.resources.requests.memory | quote }}
      cpu: {{ .Values.cloudNativePG.resources.requests.cpu | quote }}
    limits:
      memory: {{ .Values.cloudNativePG.resources.limits.memory | quote }}
      cpu: {{ .Values.cloudNativePG.resources.limits.cpu | quote }}
  postgresql:
    # https://cloudnative-pg.io/documentation/1.24/postgresql_conf/
    parameters:
      {{- range $key, $value := .Values.cloudNativePG.parameters }}
      {{ $key }}: {{ $value | quote }}
      {{- end }}
      # shared_buffers: "1GB"
      # archive_mode = 'on'
      # dynamic_shared_memory_type = 'posix'
      # full_page_writes = 'on'
      # logging_collector = 'on'
      # log_destination = 'csvlog'
      # log_directory = '/controller/log'
      # log_filename = 'postgres'
      # log_rotation_age = '0'
      # log_rotation_size = '0'
      # log_truncate_on_rotation = 'false'
      # max_parallel_workers = '32'
      # max_replication_slots = '32'
      # max_worker_processes = '32'
      # shared_memory_type = 'mmap' # for PostgreSQL >= 12 only
      # wal_keep_size = '512MB' # for PostgreSQL >= 13 only
      # wal_keep_segments = '32' # for PostgreSQL <= 12 only
      # wal_level = 'logical'
      # wal_log_hints = 'on'
      # wal_sender_timeout = '5s'
      # wal_receiver_timeout = '5s'
    {{- if eq (lower .Values.adhoc.appType) "prod" }}
    # synchronous:
    #   method: any
    #   number: 1
    {{- end }}
  # enablePDB: true
  # nodeMaintenanceWindow:
  #   inProgress: false
  #   reusePVC: false
  {{- if eq (lower .Values.adhoc.appType) "prod" }}
  backup:
    barmanObjectStore:
      {{- if .Values.cloudNativePG.backupServerName }}
      serverName: {{ .Values.cloudNativePG.backupServerName | quote }}
      {{- end }}    
      {{- include "barmanObjectStore.gcp" . | nindent 6 }}      
    target: prefer-standby
    # TODO: service level?
    retentionPolicy: "360d"
  {{- end }}
  
  bootstrap:
    {{- if .Values.cloudNativePG.restoreBackUp }}
    # Restore backup
    recovery:
      source: {{ include "adhoc-odoo.fullname" . }}-pg
      {{- if ne .Values.cloudNativePG.restoreBackUp "latest" }}
      recoveryTarget:
        targetTime: {{ .Values.cloudNativePG.restoreBackUp | quote }}
      {{- end }}
    {{- else }}
    # New database
    initdb:
      database: {{ .Values.odoo.pg.db | default "odoo" | quote }}
      owner: {{ .Values.odoo.pg.user | default "postgres" | quote }}
      secret:
        name: {{ include "adhoc-odoo.fullname" . }}-pg-secret
      # encoding: UTF8           # CodificaciÃ³n de la base de datos
    {{- end }}

  externalClusters:
  - name: {{ include "adhoc-odoo.fullname" . }}-pg
    barmanObjectStore:
      {{- include "barmanObjectStore.gcp" . | nindent 6 }}

{{- if eq (lower .Values.adhoc.appType) "prod" }}
---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: {{ include "adhoc-odoo.fullname" . }}-pg-backup
spec:
  method: barmanObjectStore
  suspend: false
  # immediate: false
  # S M H Dm Mo Dw # 
  schedule: "0 0 0 * * *" # Cada dia a medianoche utc
  # schedule: "0 */5 * * * *" # Cada 5 min
  backupOwnerReference: none
  cluster:
    name: {{ include "adhoc-odoo.fullname" . }}-pg
{{- end }}
{{- end }}
