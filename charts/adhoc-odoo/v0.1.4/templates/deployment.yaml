apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "adhoc-odoo.fullname" . }}
  labels:
    {{- include "adhoc-odoo.labels" . | nindent 4 }}
  annotations:
    # https://www.ibm.com/docs/en/cpfs?topic=certificates-refreshing-cert-manager
    {{- if .Values.ingress.enableHttps }}
    certmanager.k8s.io/disable-auto-restart: "true"
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "adhoc-odoo.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 2
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "adhoc-odoo.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "adhoc-odoo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8069
              protocol: TCP
            - name: longpolling
              containerPort: 8072
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            # Database parameters
            {{- if .Values.odoo.pg.user }}
            - name: "PGUSER"
              value: {{ .Values.odoo.pg.user | quote }}
            {{- end }}
            {{- if .Values.odoo.pg.pass }}
            - name: "PGPASSWORD"
              value: {{ .Values.odoo.pg.pass | quote }}
            {{- end }}
            {{- if .Values.odoo.pg.host }}
            - name: "PGHOST"
              value: {{ .Values.odoo.pg.host | quote }}
            {{- end }}
            {{- if .Values.odoo.pg.port }}
            - name: "PGPORT"
              value: {{ .Values.odoo.pg.port | quote }}
            {{- end }}
            {{- if .Values.odoo.pg.db }}
            # TODO: Â¿lo usa odoo?
            - name: "DATABASE"
              value: {{ .Values.odoo.pg.db | quote }}
            - name: "PGDATABASE"
              value: {{ .Values.odoo.pg.db | quote }}
            {{- end }}
            # Base Config
            {{- if .Values.odoo.basic.adminPass }}
            - name: "ADMIN_PASSWORD"
              value: {{ .Values.odoo.basic.adminPass | quote }}
            {{- end }}
            {{- if .Values.odoo.basic.dbFilter }}
            - name: "DBFILTER"
              value: {{ .Values.odoo.basic.dbFilter | quote }}
            {{- end }}
            - name: "LIST_DB"
              value: "false"
            - name: "LOG_LEVEL"
            {{- if eq "false" .Values.odoo.basic.logLevel}}
              value: "false"
            {{- else }}
              value: {{ .Values.odoo.basic.logLevel | quote }}
            {{- end }}
            - name: "UNACCENT"
              value: "true"
            - name: "PROXY_MODE"
              value: "true"
            - name: "WITHOUT_DEMO"
              value: "true"
            {{- if .Values.odoo.basic.wideModules }}
            - name: "SERVER_WIDE_MODULES"
              value: {{ .Values.odoo.basic.wideModules | quote }}
            {{- end }}
            {{- if .Values.odoo.basic.aerooHost }}
            - name: "AEROO_DOCS_HOST"
              value: {{ .Values.odoo.basic.aerooHost | quote }}
            {{- end }}
            {{- if .Values.odoo.basic.emailFrom }}
            - name: "EMAIL_FROM"
              value: {{ .Values.odoo.basic.emailFrom | quote }}
            {{- end }}
            # Performance Config
            - name: "WORKERS"
              value: {{ .Values.odoo.performance.workers | quote }}
            - name: "MAX_CRON_THREADS"
              value: {{ .Values.odoo.performance.maxCronTh | quote }}
            {{- if .Values.odoo.performance.maxDbConn }}
            - name: "DB_MAXCONN"
              value: {{ .Values.odoo.performance.maxDbConn | quote }}
            {{- end }}
            {{- if .Values.odoo.performance.maxDbConn }}
            - name: "DB_TEMPLATE"
              value: {{ .Values.odoo.performance.dbTemplate | quote }}
            {{- end }}
            {{- if .Values.odoo.performance.maxMemHard }}
            - name: "LIMIT_MEMORY_HARD"
              value: {{ .Values.odoo.performance.maxMemHard | quote }}
            {{- end }}
            {{- if .Values.odoo.performance.maxMemSoft }}
            - name: "LIMIT_MEMORY_SOFT"
              value: {{ .Values.odoo.performance.maxMemSoft | quote }}
            {{- end }}
            {{- if .Values.odoo.performance.maxTimeCpu }}
            - name: "LIMIT_TIME_CPU"
              value: {{ .Values.odoo.performance.maxTimeCpu | quote }}
            {{- end }}
            - name: "LIMIT_TIME_REAL"
              value: {{ .Values.odoo.performance.maxTimeReal | quote }}
            - name: "LIMIT_TIME_REAL_CRON"
              value: {{ .Values.odoo.performance.maxTimeCron | quote }}
            - name: "FILESTORE_COPY_HARD_LINK"
              value: "true"
            - name: "FILESTORE_OPERATIONS_THREADS"
              value: "3"
            {{- if .Values.odoo.performance.maxHttpTh }}
            - name: "ODOO_MAX_HTTP_THREADS"
              value: {{ .Values.odoo.performance.maxHttpTh | quote }}
            {{- end }}
            {{- if .Values.odoo.performance.saasPath }}
            - name: "ODOO_SAAS_PATH"
              value: {{ .Values.odoo.performance.saasPath | quote }}
            {{- end }}
            # SaaS Config
            {{- if .Values.odoo.saas.mode }}
            - name: "SERVER_MODE"
              value: {{ .Values.odoo.saas.mode | quote }}
            {{- end }}
            - name: "DISABLE_SESSION_GC"
              value: "true"
            # Entrypoint
            - name: "WAIT_PG"
              value: "false"
            {{- if .Values.odoo.entrypoint.fixdbs }}
            - name: "FIXDBS"
              value: {{ .Values.odoo.entrypoint.fixdbs | quote }}
            {{- end }}
            {{- if .Values.odoo.entrypoint.fixdbsAdhoc }}
            - name: "FIXDBS_ADHOC"
              value: {{ .Values.odoo.entrypoint.fixdbsAdhoc | quote }}
            {{- end }}
            - name: "FIX_DB_WEB_DISABLED"
              value: "true"
            # Dynamic Entrypoint
            {{- if .Values.odoo.entrypoint.repos }}
            - name: "REPOS_YAML"
              value: {{ .Values.odoo.entrypoint.repos | quote }}
            {{- end }}
            {{- if .Values.odoo.entrypoint.custom }}
            - name: "CUSTOM_CONFIG"
              value: {{ .Values.odoo.entrypoint.custom | quote }}
            {{- end }}
            # SMTP Config
            {{- if .Values.odoo.smtp.host }}
            - name: "SMTP_SERVER"
              value: {{ .Values.odoo.smtp.host | quote }}
            {{- end }}
            {{- if .Values.odoo.smtp.port }}
            - name: "SMTP_PORT"
              value: {{ .Values.odoo.smtp.port | quote }}
            {{- end }}
            {{- if .Values.odoo.smtp.ssl }}
            - name: "SMTP_SSL"
              value: {{ .Values.odoo.smtp.ssl | quote }}
            {{- end }}
            {{- if .Values.odoo.smtp.user }}
            - name: "SMTP_USER"
              value: {{ .Values.odoo.smtp.user | quote }}
            {{- end }}
            {{- if .Values.odoo.smtp.pass }}
            - name: "SMTP_PASSWORD"
              value: {{ .Values.odoo.smtp.pass | quote }}
            {{- end }}
            {{- if .Values.odoo.smtp.whiteList }}
            - name: "SMTP_DOMAIN_WHITELIST"
              value: {{ .Values.odoo.smtp.whiteList | quote }}
            {{- end }}
            {{- if .Values.odoo.smtp.catchall }}
            - name: "MAIL_CATCHALL_DOMAIN"
              value: {{ .Values.odoo.smtp.catchall | quote }}
            {{- end }}
            # Storage Config
            - name: "IR_ATTACHMENT_LOCATION"
              value: {{ .Values.storage.ir_attachment_location | quote }}
            - name: "AWS_REGION"
              value: {{ .Values.storage.aws_region | quote }}
            - name: "AWS_HOST"
              value: {{ .Values.storage.aws_host | quote }}
            - name: "AWS_BUCKETNAME"
              value: {{ .Values.storage.aws_bucketname | quote }}
            - name: "AWS_ACCESS_KEY_ID"
              value: {{ .Values.storage.aws_access_key_id | quote }}
            - name: "AWS_SECRET_ACCESS_KEY"
              value: {{ .Values.storage.aws_secret_access_key | quote }}
            # Redis Config
            {{- if .Values.redis.enabled }}
            # values for v13- (remove when no longer customers on v13-)
            - name: "ENABLE_REDIS"
              value: "true"
            - name: "REDIS_HOST"
              value: {{ .Values.redis.host | quote }}
            - name: "REDIS_PORT"
              value: "6379"
            - name: "REDIS_PASS"
              value: {{ .Values.redis.pass | quote  }}
            - name: "REDIS_DBINDEX"
              value: "1"
            # values for v15+ (using https://github.com/camptocamp/odoo-cloud-platform/tree/15.0/session_redis)
            - name: "ODOO_SESSION_REDIS"
              value: "true"
            - name: "ODOO_SESSION_REDIS_HOST"
              value: {{ .Values.redis.host | quote }}
            - name: "ODOO_SESSION_REDIS_PASSWORD"
              value: {{ .Values.redis.pass | quote  }}
            {{- end }}
            # Other environment variables (no funciona asi)
            # {{- range $key, $value := .Values.multiEnvVariables }}
            # - name: "{{ $key }}"
            #   value: "{{ $value }}"
            # {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      affinity:
          # Don't co-locate pods of this service with any other pods including pods of this service
          # https://github.com/kubernetes/community/blob/master/contributors/design-proposals/scheduling/podaffinity.md
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector: ~
                topologyKey: "node"
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: {{ .Values.nodeTag }}
                  operator: In
                  values:
                  - "true"

      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
