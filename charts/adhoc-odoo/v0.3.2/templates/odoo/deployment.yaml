{{ $minorVersion := include "adhoc-odoo.odoo-minor-version" . | int }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "adhoc-odoo.fullname" . }}
  labels:
    {{- include "adhoc-odoo.labels" . | nindent 4 }}
  annotations:
    certmanager.k8s.io/disable-auto-restart: "true"
    "kubernetes.io/change-cause": {{ .Values.changeCause | quote }}
spec:
  {{- if not (or .Values.autoscaling.hpa.enabled .Values.autoscaling.keda.enabled) }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "adhoc-odoo.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      {{- if or .Values.autoscaling.hpa.enabled .Values.autoscaling.keda.enabled (lt (.Values.replicaCount | int) 3) }}
      maxUnavailable: 0
      {{- else }}
      # If the replicaCount > 2 and we are not using autoscaler, we allow one pod to be unavailable during the update
      maxUnavailable: 1
      {{- end }}
  revisionHistoryLimit: 10
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if eq .Values.storage.location "fuse" }}
        gke-gcsfuse/volumes: "true"
        # https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/cloud-storage-fuse-csi-driver?hl=es-419
        # De forma predeterminada, el contenedor del sidecar está configurado con las siguientes solicitudes de recursos, sin establecer los límites de recursos:
        # CPU de 250 m
        # 256 MiB de memoria
        # Almacenamiento efímero de 5 GiB
        {{- if ne .Values.adhoc.appType "prod" }}
        gke-gcsfuse/cpu-limit: "1"
        gke-gcsfuse/memory-limit: 1Gi
        gke-gcsfuse/ephemeral-storage-limit: 5Gi
        gke-gcsfuse/cpu-request: 5m
        gke-gcsfuse/memory-request: 25Mi
        gke-gcsfuse/ephemeral-storage-request: 100Mi
        {{- end }}
        {{- end }}
        rollme: {{ include "adhoc-odoo.releaseDigest" . }} # Force redeploy on change
      labels:
        {{- include "adhoc-odoo.selectorLabels" . | nindent 8 }}
        {{- include "adhoc-odoo.adhocLabels" . | nindent 8 }}
        adhoc.ar/app-name: "odoo"
    spec:
      {{- if eq .Values.storage.location "fuse" }}
      terminationGracePeriodSeconds: 120
      {{- end }}
      serviceAccountName: {{ include "adhoc-odoo.serviceAccountName" . }}
      {{- if .Values.cloudNativePG.enabled }}
      initContainers:
        - name: wait-for-postgres
          image: "ghcr.io/cloudnative-pg/postgresql:{{ .Values.cloudNativePG.version | default "15.0" }}"
          command: ['sh', '-c', 'until pg_isready -h {{ include "cnpg.sanitizedPgName" . }}-pg-rw -p {{ .Values.odoo.pg.port | default 5432 }}; do echo "Esperando a que PostgreSQL esté listo..."; sleep 2; done']
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            {{- if gt $minorVersion 20250806 }}
            runAsNonRoot: true
            {{- else }}
            runAsNonRoot: false
            {{- end }}
            seccompProfile:
              type: RuntimeDefault
          {{- if and (gt $minorVersion 20250415) ( .Values.odoo.entrypoint.repos) }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}.dev"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.adhoc.devMode }}
          args:
            - /bin/sh
            - -c
            - sleep infinity
          {{ end }}
          ports:
            - name: http
              containerPort: 8069
              protocol: TCP
            - name: websocket
              containerPort: 8072
              protocol: TCP
          {{- if not .Values.adhoc.devMode }}
          {{- with .Values.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          envFrom:
          - configMapRef:
              name: {{ include "adhoc-odoo.fullname" . }}-common-envs
          - configMapRef:
              name: {{ include "adhoc-odoo.fullname" . }}-envs
          - secretRef:
              name: {{ include "adhoc-odoo.fullname" . }}-secrets
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- if eq .Values.storage.location "fuse" }}
          {{- $fusePath := printf "/home/odoo/data/filestore/%s" (ternary "odoo" .Release.Name .Values.cloudNativePG.enabled) }}
          - name: gcs-fuse-csi-ephemeral
            readOnly: false
            mountPath: {{ $fusePath }}
          - name: gcs-fuse-csi-ephemeral-skip
            readOnly: false
            mountPath: {{ printf "%s/%s" $fusePath "checklist" }}
          {{- end }}
          {{- if and .Values.adhoc.dnsBannedHost ( ne .Values.adhoc.appType "prod" ) }}
          - name: hosts
            mountPath: /etc/hosts
            subPath: hosts
            readOnly: true
          {{- end }}
          {{- if .Values.ingress.reverseProxy.enabled }}
          - name: odoo-sendfile-conf
            mountPath: /home/odoo/.resources/conf.d/99-odoo-send-file.conf
            subPath: odoo-send-file.conf
            readOnly: true
          {{- end }}
      affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              {{- /* Try not to co-locate pods for this service with other pods for this service */}}
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/instance: {{ .Release.Name }}
                      adhoc.ar/app-name: "odoo"
                  topologyKey: "kubernetes.io/hostname"
              {{- /* Try to distribute services of the same type among nodes */}}
              - weight: 50
                podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      adhoc.ar/tier: {{ .Values.adhoc.appType | lower }}
                  namespaceSelector:
                    matchExpressions:
                      - key: "kubernetes.io/metadata.name"
                        operator: Exists
                  topologyKey: "kubernetes.io/hostname"
              {{- /* Try to distribute the pods with the same service level among nodes */}}
              - weight: 50
                podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      adhoc.ar/service-level: {{ .Values.adhoc.serviceLevel }}
                  namespaceSelector:
                    matchExpressions:
                      - key: "kubernetes.io/metadata.name"
                        operator: Exists
                  topologyKey: "kubernetes.io/hostname"
              {{- if .Values.cloudNativePG.enabled }}
              {{- /* Try to distribute pg in different nodes increasing availability */}}
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      cnpg.io/cluster: {{ .Release.Name }}-pg
                  topologyKey: "kubernetes.io/hostname"
              {{- end }}
          {{- if .Values.nodeTag }}
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: {{ .Values.nodeTag }}
                  operator: In
                  values:
                  - "true"
          {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      nodeSelector:
        {{- if eq .Values.storage.location "fuse" }}
        iam.gke.io/gke-metadata-server-enabled: "true"
        {{- end }}
      {{- with .Values.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if and .Values.adhoc.dnsBannedHost ( ne .Values.adhoc.appType "prod" ) }}
      - name: hosts
        configMap:
          name: {{ include "adhoc-odoo.fullname" . }}-hosts
      {{- end }}
      {{- if .Values.ingress.reverseProxy.enabled }}
      - name: odoo-sendfile-conf
        configMap:
          name: {{ include "adhoc-odoo.fullname" . }}-odoo-sendfile-conf
      {{- end }}
      {{- if eq .Values.storage.location "fuse" }}
      - name: gcs-fuse-csi-ephemeral
        csi:
          driver: gcsfuse.csi.storage.gke.io
          readOnly: false
          volumeAttributes:
            bucketName: {{ .Values.storage.aws_bucketname | quote }}
            {{- /*
            Description: Whether your workload should export metrics. This should be set to "false" if you plan on using

            Default: true
            */}}
            disableMetrics: "true"
            {{- /*
            Directs the CSI driver to skip redundant access control checks for the Cloud Storage bucket, when set to "true".
            This reduces the overhead of redundant Kubernetes Service API, Security Token Service, and IAM calls.
            When the flag is set, the Cloud Storage FUSE process, running as part of the sidecar container in the Pod,
            handles the bucket access control checks

            Default: False
            */}}
            skipCSIBucketAccessCheck: "true"
            gcsfuseLoggingSeverity: warning
            mountOptions: "uid=1000,gid=1000,file-mode=600,dir-mode=700,implicit-dirs=true,o=rw,file-cache:enable-parallel-downloads:true,file-cache:parallel-downloads-per-file:4,file-cache:max-parallel-downloads:-1,file-cache:download-chunk-size-mb:3,file-cache:max-size-mb:200,metadata-cache:ttl-secs:-1"
            fileCacheCapacity: "200Mi"
      - name: gcs-fuse-csi-ephemeral-skip
        emptyDir: {}
      {{- end }}
