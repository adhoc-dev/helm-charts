apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "adhoc-odoo.fullname" . }}
  labels:
    {{- include "adhoc-odoo.labels" . | nindent 4 }}
  annotations:
    {{ if .Values.ingress.enableHttps }}
    {{- /* https://www.ibm.com/docs/en/cpfs?topic=certificates-refreshing-cert-manager */ -}}
    certmanager.k8s.io/disable-auto-restart: "true"
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "adhoc-odoo.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 2
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if eq .Values.storage.location "fuse" }}
        gke-gcsfuse/volumes: "true"
        {{- end }}
      labels:
        {{- include "adhoc-odoo.selectorLabels" . | nindent 8 }}
        {{- include "adhoc-odoo.adhocLabels" . | nindent 8 }}
        adhoc.ar/app-name: "odoo"
    spec:
      {{- if eq .Values.storage.location "fuse" }}
      terminationGracePeriodSeconds: 60
      {{- end }}
      serviceAccountName: {{ include "adhoc-odoo.serviceAccountName" . }}
      {{ with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{ end }}
      {{- if .Values.cloudNativePG.enabled }}
      initContainers:
        - name: wait-for-postgres
          image: "ghcr.io/cloudnative-pg/postgresql:{{ .Values.cloudNativePG.version | default "15.0" }}"
          command: ['sh', '-c', 'until pg_isready -h {{ .Release.Name }}-pg-rw -p {{ .Values.odoo.pg.port | default 5432 }}; do echo "Esperando a que PostgreSQL est√© listo..."; sleep 2; done']
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.adhoc.devMode }}
          args:
            - /bin/sh
            - -c
            - sleep infinity
          {{ end }}
          ports:
            - name: http
              containerPort: 8069
              protocol: TCP
            - name: websocket
              containerPort: 8072
              protocol: TCP
          {{- if not .Values.adhoc.devMode }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          envFrom:
          - configMapRef:
              name: {{ include "adhoc-odoo.fullname" . }}-common-envs
          - configMapRef:
              name: {{ include "adhoc-odoo.fullname" . }}-envs
          - secretRef:
              name: {{ include "adhoc-odoo.fullname" . }}-secrets
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- range $key, $value := .Values.odoo.extraEnvVars }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- if eq .Values.storage.location "fuse" }}
          - name: gcs-fuse-csi-ephemeral
            mountPath: /home/odoo/data/filestore/{{ .Release.Name }}
            readOnly: false
          {{- end }}
      affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              {{/* Try not to co-locate pods for this service with other pods for this service */}}
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                      - key: "app.kubernetes.io/instance"
                        operator: In
                        values:
                          - {{ .Release.Name }}
                  topologyKey: "kubernetes.io/hostname"
              {{/* Try to distribute services of the same type among nodes */}}
              - weight: 50
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                      - key: "adhoc.ar/tier"
                        operator: In
                        values:
                          - {{ .Values.adhoc.appType | lower }}
                  topologyKey: "kubernetes.io/hostname"
              {{/* Try to distribute services of the same type among nodes
              # Try to distribute the pods with the same service level among nodes
              # - weight: 50
              #   podAffinityTerm:
              #     labelSelector:
              #       matchExpressions:
              #         - key: "adhoc.ar/service-level"
              #           operator: In
              #           values:
              #             - {{ .Values.adhoc.serviceLevel }}
              #     topologyKey: "kubernetes.io/hostname"
              */}}
          {{- if .Values.nodeTag }}
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: {{ .Values.nodeTag }}
                  operator: In
                  values:
                  - "true"
          {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      nodeSelector:
        {{- if eq .Values.storage.location "fuse" }}
        iam.gke.io/gke-metadata-server-enabled: "true"
        {{- end }}
      {{- with .Values.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq .Values.storage.location "fuse" }}
      volumes:
      - name: gcs-fuse-csi-ephemeral
        csi:
          driver: gcsfuse.csi.storage.gke.io
          readOnly: false
          volumeAttributes:
            bucketName: {{ .Values.storage.aws_bucketname | quote }}
            {{/*
            Description: Whether your workload should export metrics. This should be set to "false" if you plan on using

            Default: true
            */}}
            disableMetrics: "true"
            {{/*
            Directs the CSI driver to skip redundant access control checks for the Cloud Storage bucket, when set to "true".
            This reduces the overhead of redundant Kubernetes Service API, Security Token Service, and IAM calls.
            When the flag is set, the Cloud Storage FUSE process, running as part of the sidecar container in the Pod, 
            handles the bucket access control checks

            Default: False
            */}}
            skipCSIBucketAccessCheck: "true"
            gcsfuseLoggingSeverity: warning
            mountOptions: "uid=1000,gid=1000,file-mode=600,dir-mode=700,implicit-dirs=true,o=rw,file-cache:enable-parallel-downloads:true,file-cache:parallel-downloads-per-file:4,file-cache:max-parallel-downloads:-1,file-cache:download-chunk-size-mb:3,file-cache:max-size-mb:200,metadata-cache:ttl-secs:-1"
            fileCacheCapacity: "200Mi"
      {{- end }}